name: Linux build

on: push

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, ubuntu-18.04]
        compiler: [gcc, clang]
        mpi: [mpich, openmpi]
    
    steps:
    - uses: actions/checkout@v2

    - name: install dependencies
      run: |
        sudo apt-get update -y
        sudo DEBIAN_FRONTEND=noninteractive apt-get install -y autoconf autoconf-archive automake ca-certificates file gnupg libtool make pkg-config libdispatch-dev libibumad-dev libpciaccess-dev libssh-dev libudev-dev openssh-client software-properties-common wget
        if [ "${{ matrix.mpi }}" = "mpich" ]; then
          sudo apt-get install -y libmpich-dev mpich
        else
          sudo apt-get install -y libopenmpi-dev openmpi-bin
        fi
        if [ "${{ matrix.os }}" = "ubuntu-18.04" ]; then
          sudo apt-get install -y pciutils-dev
          sudo apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/7fa2af80.pub
          sudo add-apt-repository "deb http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/ /"
          sudo apt-get update -y
          sudo apt-get install -y cuda-nvml-dev-10-1
          echo "CPATH=/usr/local/cuda-10.1/targets/x86_64-linux/include:$CPATH" >> $GITHUB_ENV
        elif [ "${{ matrix.os }}" = "ubuntu-20.04" ]; then
          sudo apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/7fa2af80.pub
          sudo add-apt-repository "deb http://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/ /"
          sudo apt-get update -y
          sudo apt-get install -y cuda-nvml-dev-11-0
          echo "CPATH=/usr/local/cuda-11.0/targets/x86_64-linux/include:$CPATH" >> $GITHUB_ENV
        fi

    - name: set compiler
      run: |
        if [ "${{ matrix.compiler }}" = "clang" ]; then
          echo "CC=clang" >> $GITHUB_ENV
          echo "CXX=clang++" >> $GITHUB_ENV
        else
          echo "CC=gcc" >> $GITHUB_ENV
          echo "CXX=g++" >> $GITHUB_ENV
        fi

    - name: autogen
      run: ./autogen.sh

    - name: configure
      run: ./configure

    - name: make
      run: make -j$(nproc)

    - name: make check
      run: VERBOSE=1 make check -j$(nproc)

    - name: make install
      run: sudo make install

    - name: make installcheck
      run: LD_LIBRARY_PATH=/usr/local/lib make installcheck
